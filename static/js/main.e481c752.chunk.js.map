{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","ready","keywords","selected","checkboxes","link","handleCheck","bind","handleClick","fetch","method","then","res","json","err","console","log","result","undefined","map","s","replace","c","trim","i","length","push","className","type","onChange","value","setState","this","selectedKeywords","join","href","target","rel","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAGqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,OAAO,EACPC,SAAU,GACVC,SAAU,GACVC,WAAY,GACZC,KAAM,MAER,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBAVF,E,qDAanB,WAAqB,IAAD,OAClBE,MAAM,qDAAsD,CAC1DC,OAAQ,QAETC,MAAK,SAAAC,GACJ,OAAOA,EAAIC,UACV,SAAAC,GAEDC,QAAQC,IAAIF,MACXH,MAAK,SAAAM,GACN,QAAeC,IAAXD,GAGG,GAAyB,MAArBA,EAAM,OAAoB,CACnC,IAAIf,EAAWe,EAAM,SACrBf,EAAWA,EAASiB,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QAAQ,UAAU,SAAAC,GAAC,MAAI,IAAMA,KAAGC,UAE/D,IADA,IAAInB,EAAa,GACRoB,EAAI,EAAGA,EAAItB,EAASuB,OAAQD,IACnCpB,EAAWsB,KACT,sBAAKC,UAAU,WAAf,UACA,uBAAOC,KAAM,WAAoBC,SAAU,EAAKvB,YAAYkB,GAAIM,MAAO5B,EAASsB,IAAlDA,GAC7BtB,EAASsB,KAFqBA,IAMnC,EAAKO,SAAS,CACZ9B,OAAO,EACPC,SAAUA,EACVC,SAAUD,EAASiB,KAAI,SAAAC,GAAC,OAAI,KAC5BhB,WAAYA,UAlBdW,QAAQC,IAAI,+B,yBAwBlB,SAAYQ,GAAI,IAAD,OACb,OAAO,WACL,IAAIrB,EAAW,EAAKH,MAAMG,SAC1BA,EAASqB,IAAMrB,EAASqB,GACxB,EAAKO,SAAS,CACZ5B,SAAUA,O,yBAKhB,WAIE,IAJa,IAAD,OACRD,EAAW8B,KAAKhC,MAAME,SACtBC,EAAW6B,KAAKhC,MAAMG,SACtB8B,EAAmB,GACdT,EAAI,EAAGA,EAAIrB,EAASsB,OAAQD,IAC/BrB,EAASqB,IACXS,EAAiBP,KAAKxB,EAASsB,GAAGH,QAAQ,KAAM,KAGpDZ,MAAM,yDAA2DwB,EAAiBC,KAAK,KAAM,CAC3FxB,OAAQ,QAETC,MAAK,SAAAC,GACJ,OAAOA,EAAIC,UACV,SAAAC,GAEDC,QAAQC,IAAIF,MACXH,MAAK,SAAAM,GACN,QAAeC,IAAXD,GAGG,GAAyB,MAArBA,EAAM,OAAoB,CACnC,IAAIZ,EAAOY,EAAM,KACjB,EAAKc,SAAS,CACZ1B,KAAM,mBAAG8B,KAAM9B,EAAM+B,OAAO,SAASC,IAAI,aAAnC,iCALRtB,QAAQC,IAAI,+B,oBAWlB,WACE,OACE,qBAAKW,UAAU,MAAf,SACA,yBAAQA,UAAU,aAAlB,UACA,8CACA,4BAAIK,KAAKhC,MAAMC,MAAQ,yEAA2E,YAClG,qBAAK0B,UAAU,aAAf,SAA6BK,KAAKhC,MAAMI,aACxC,wBAAQkC,QAASN,KAAKxB,YAAtB,qBACCwB,KAAKhC,MAAMK,c,GAjGekC,IAAMC,WCSxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e481c752.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ready: false,\n      keywords: [],\n      selected: [],\n      checkboxes: [],\n      link: null\n    }\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://chartung17-resume-maker.herokuapp.com/help\", {\n      method: 'GET'\n    })\n    .then(res => {\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(result => {\n      if (result === undefined) {\n        console.log('Unknown error occurred');\n        return;\n      } else if (result['status'] === 200) {\n        let keywords = result['keywords'];\n        keywords = keywords.map(s => s.replace(/[A-Z]/g, c => ' ' + c).trim());\n        let checkboxes = [];\n        for (let i = 0; i < keywords.length; i++) {\n          checkboxes.push(\n            <div className=\"Checkbox\" key={i}>\n            <input type={'checkbox'} key={i} onChange={this.handleCheck(i)} value={keywords[i]}/>\n            {keywords[i]}\n            </div>\n          );\n        }\n        this.setState({\n          ready: true,\n          keywords: keywords,\n          selected: keywords.map(s => false),\n          checkboxes: checkboxes\n        });\n      }\n    });\n  }\n\n  handleCheck(i) {\n    return () => {\n      let selected = this.state.selected;\n      selected[i] = !selected[i];\n      this.setState({\n        selected: selected\n      });\n    }\n  }\n\n  handleClick() {\n    let keywords = this.state.keywords;\n    let selected = this.state.selected;\n    let selectedKeywords = [];\n    for (let i = 0; i < selected.length; i++) {\n      if (selected[i]) {\n        selectedKeywords.push(keywords[i].replace(/ /g, ''));\n      }\n    }\n    fetch(\"https://chartung17-resume-maker.herokuapp.com/compile/\" + selectedKeywords.join('-'), {\n      method: 'GET'\n    })\n    .then(res => {\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(result => {\n      if (result === undefined) {\n        console.log('Unknown error occurred');\n        return;\n      } else if (result['status'] === 200) {\n        let link = result['link'];\n        this.setState({\n          link: <a href={link} target=\"_blank\" rel=\"noreferrer\">Open Resume</a>\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n      <header className=\"App-header\">\n      <h1>Resume Maker</h1>\n      <p>{this.state.ready ? 'Please select all relevant keywords and then click the Compile button.' : 'Loading'}</p>\n      <div className=\"checkboxes\">{this.state.checkboxes}</div>\n      <button onClick={this.handleClick}>Compile</button>\n      {this.state.link}\n      </header>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}